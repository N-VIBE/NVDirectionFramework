{"abstract":[{"text":"Retrieve a walking route between two locations.","type":"text"}],"metadata":{"roleHeading":"Article","modules":[{"name":"NVDirectionKit"}],"title":"Getting walking route","role":"article"},"variants":[{"paths":["\/documentation\/nvdirectionkit\/getroute"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/nvdirectionkit\/getroute"]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"inlineContent":[{"text":"You can calculate route between two locations and set different parameter based on your need.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeRoute","isActive":true,"type":"reference"},{"text":" contains one ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeLeg"},{"type":"text","text":" which contains two or more "},{"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeStep","isActive":true},{"type":"text","text":". Each "},{"isActive":true,"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeStep","type":"reference"},{"text":" refers to an instruction and you will always get at least 2 of them (the start and the arrival).","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Every "},{"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeStep","isActive":true},{"type":"text","text":" can be represented by a coordinate (where the instruction need to be done) and a geometry (to draw the path between the instruction and the next one)."}]},{"text":"Calculate a route","type":"heading","level":2,"anchor":"Calculate-a-route"},{"type":"paragraph","inlineContent":[{"text":"To calculate route, you need to use the method ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getNavigationRoute(from:to:sideStreet:language:withObstacle:forbiddenObstacles:withInformationPoint:withAlternativePolyline:completion:)"},{"type":"text","text":" with a start and end "},{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeLocation","type":"reference","isActive":true},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"You will receive a result or a "},{"isActive":true,"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/RouteError","type":"reference"},{"text":". The result contains 3 values. ","type":"text"},{"code":"route","type":"codeVoice"},{"text":" is your calculated ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeRoute","type":"reference"},{"text":", ","type":"text"},{"code":"startingDirection","type":"codeVoice"},{"text":" value represents the angle towards the start of the route and ","type":"text"},{"code":"solutionFound","type":"codeVoice"},{"type":"text","text":" value indicates if the result contains good crossing pathing."}],"type":"paragraph"},{"name":"Important","content":[{"inlineContent":[{"text":"The maximum distance of the requested route cannot exceed 30km with crossing data and 150km without crossing data.","type":"text"}],"type":"paragraph"}],"style":"important","type":"aside"},{"code":["import NVDirectionKit","import CoreLocation","","class MyClass: UIViewController {","","    override func viewDidLoad() {","        let origin = CLLocationCoordinate2D(latitude: 48.85934519646515, longitude: 2.3790224217764826)","        let destination = CLLocationCoordinate2D(latitude: 48.85869580049223, longitude: 2.373062553499055)","        ","        NVDirection.shared.getNavigationRoute(from: NVibeLocation(address: \"7 Avenue Parmentier\", position: origin), to: NVibeLocation(address: \"Pépinière 27\", position: destination)) { (result, error) in","            guard result != nil, error == nil else {","                \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","                return","            }","            \/\/You receive the calculated route here and additional data.","            result.route \/\/NVibeRoute","            result.startingDirection \/\/CLLocationDirection","            result.solutionFound \/\/Bool","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Set-the-departure-side-street","level":2,"type":"heading","text":"Set the departure side street"},{"inlineContent":[{"type":"text","text":"When you request a route, you can also add a departure "},{"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/SideStreet","isActive":true},{"type":"text","text":" to tell if you want that the calculated route starts from the left or the right side."}],"type":"paragraph"},{"type":"aside","name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If no side street is set, the starting side will be set to the opposite of the first turn instruction. For exemple, if the next turn instruction after the departure is left, the starting side will be set to right."}]}]},{"type":"codeListing","syntax":"swift","code":["NVDirection.shared.getNavigationRoute(from: start, to: end, sideStreet: .LEFT) { (result, error) in","    guard result != nil, error == nil else {","        \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","        return","    }","    \/\/You receive the calculated route here and additional data.","    result.route \/\/NVibeRoute","    result.startingDirection \/\/CLLocationDirection","    result.solutionFound \/\/Bool","}"]},{"level":2,"text":"Set the language of instruction","type":"heading","anchor":"Set-the-language-of-instruction"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you calculate a route, you can change the language of the instruction."}]},{"inlineContent":[{"type":"text","text":"Available languages are English (en), French (fr), Dutch (nl), Spanish (es), German (de). The default language is English."}],"type":"paragraph"},{"type":"codeListing","code":["NVDirection.shared.getNavigationRoute(from: start, to: end, language: \"en\") { (result, error) in","    guard result != nil, error == nil else {","        \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","        return","    }","    \/\/You receive the calculated route here and additional data.","    result.route \/\/NVibeRoute","    result.startingDirection \/\/CLLocationDirection","    result.solutionFound \/\/Bool","}"],"syntax":"swift"},{"text":"Get an alternative geometry","anchor":"Get-an-alternative-geometry","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you calculate a route, you can request an alternative geometry. The alternative geometry follows the sidewalk instead of the center of the route."}]},{"syntax":"swift","code":["NVDirection.shared.getNavigationRoute(from: start, to: end, withAlternativePolyline: true) { (result, error) in","    guard result != nil, error == nil else {","        \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","        return","    }","    \/\/You receive the calculated route here and additional data.","    result.route.alternativeGeometry","}"],"type":"codeListing"},{"level":2,"text":"Get obstacles along the walking route and avoid them","type":"heading","anchor":"Get-obstacles-along-the-walking-route-and-avoid-them"},{"type":"paragraph","inlineContent":[{"text":"When you calculate a route, you can request obstacles along the walking route.","type":"text"}]},{"name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Obstacles are actually available on specific area so the majority of walking route will not contain any obstacles.","type":"text"}]}],"style":"important"},{"code":["NVDirection.shared.getNavigationRoute(from: start, to: end, withObstacle: true) { (result, error) in","    guard result != nil, error == nil else {","        \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","        return","    }","    \/\/You receive the calculated route here and additional data.","    for leg in result.route.legs {","        for step in leg.steps {","            guard let obstacles = step.obstacles else { continue }","            for obstacle in obstacles {","                obstacle.id","            }","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Then, you can calculate a new route by adding forbidden obstacles with their ","type":"text"},{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeObstacle\/id","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"style":"important","type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Forbidden obstacles will only change the crossing path along the route if possible."}]}]},{"type":"codeListing","code":["NVDirection.shared.getNavigationRoute(from: start, to: end, withObstacle: true, forbiddenObstacles: [obstacle.id]) { (result, error) in","    guard result != nil, error == nil else {","        \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","        return","    }","    \/\/You receive the calculated route here and additional data.","    for leg in result.route.legs {","        for step in leg.steps {","            guard let obstacles = step.obstacles else { continue }","            for obstacle in obstacles {","                obstacle.id","            }","        }","    }","}"],"syntax":"swift"},{"level":2,"text":"Get information points along the walking route","anchor":"Get-information-points-along-the-walking-route","type":"heading"},{"inlineContent":[{"text":"When you calculate a route, you can request information points along the walking route.","type":"text"}],"type":"paragraph"},{"type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Information points are actually available on specific area so the majority of walking route will not contain any information points."}]}],"style":"important"},{"type":"codeListing","code":["NVDirection.shared.getNavigationRoute(from: start, to: end, withInformationPoint: true) { (result, error) in","    guard result != nil, error == nil else {","        \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","        return","    }","    \/\/You receive the calculated route here and additional data.","    for leg in result.route.legs {","        for step in leg.steps {","            guard let informationPoints = step.informationPoints else { continue }","            for informationPoint in informationPoints {","                informationPoint.information","            }","        }","    }","}"],"syntax":"swift"},{"type":"heading","text":"Get only the starting direction of a route","anchor":"Get-only-the-starting-direction-of-a-route","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want only the starting direction of a route, you can use "},{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getStartingDirection(from:to:completion:)","type":"reference","isActive":true},{"text":" instead. It will count as a route calculation for the API but without crossing so it will be faster. If you have already your ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeRoute","isActive":true},{"type":"text","text":", just get the starting direction from the object data."}]},{"syntax":"swift","code":["NVDirection.shared.getStartingDirection(from: start, to: end) { (direction, error) in","    guard result != nil, error == nil else {","        \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","        return","    }","    \/\/You receive the direction here.","    direction \/\/CLLocationDirection","}"],"type":"codeListing"},{"text":"Calculate a route with links","level":2,"type":"heading","anchor":"Calculate-a-route-with-links"},{"type":"paragraph","inlineContent":[{"text":"Including ","type":"text"},{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/Link","isActive":true,"type":"reference"},{"text":" will force the calculated route to pass through specific path. You cannot guess link but you will receive them when you request a multimodal route with alternative walking route. After, you need to use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getNavigationRouteWithoutCrossing(from:to:option:)"},{"type":"text","text":" or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getNavigationRoute(from:to:sideStreet:option:)"},{"type":"text","text":" to include link in the request. Both method only exist with async await."}]},{"syntax":"swift","type":"codeListing","code":["let alternativeMultimodalRoute = ...","let links = alternativeMultimodalRoute?.steps.first!.information.getWalkingInformation()?.links ?? []","let option = NVibeRouteOption(viaLinks: links)","","try {","    let result = try await NVDirection.shared.getNavigationRoute(from: start, to: end, option: option)","    \/\/You receive the calculated route here and additional data.","    result.route \/\/NVibeRoute","    result.startingDirection \/\/CLLocationDirection","    result.solutionFound \/\/Bool","} catch {","    \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","    let routeError = error as? RouteError","}"]}]}],"identifier":{"url":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetRoute","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetStarted","doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetMultimodalRoute","doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection"],"generated":true,"anchor":"Essentials"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit"]]},"references":{"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVibeRouteOption":{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeRouteOption","abstract":[{"type":"text","text":"The option for walking route."}],"type":"topic","role":"symbol","url":"\/documentation\/nvdirectionkit\/nviberouteoption","navigatorTitle":[{"text":"NVibeRouteOption","kind":"identifier"}],"title":"NVibeRouteOption","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NVibeRouteOption"}]},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/RouteError":{"role":"symbol","navigatorTitle":[{"text":"RouteError","kind":"identifier"}],"abstract":[{"text":"Constants that describe error related to walking route calculation.","type":"text"}],"url":"\/documentation\/nvdirectionkit\/routeerror","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouteError"}],"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/RouteError","type":"topic","title":"RouteError"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVibeLocation":{"abstract":[{"text":"The address and coordinates of a location.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeLocation","url":"\/documentation\/nvdirectionkit\/nvibelocation","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"NVibeLocation","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"NVibeLocation"}],"type":"topic","kind":"symbol","title":"NVibeLocation"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVibeObstacle/id":{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeObstacle\/id","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","title":"id","abstract":[{"type":"text","text":"The id of the obstacle."}],"url":"\/documentation\/nvdirectionkit\/nvibeobstacle\/id"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/SideStreet":{"title":"SideStreet","role":"symbol","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/SideStreet","navigatorTitle":[{"kind":"identifier","text":"SideStreet"}],"url":"\/documentation\/nvdirectionkit\/sidestreet","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The side of the street."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SideStreet","kind":"identifier"}]},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVibeRoute":{"abstract":[{"text":"The walking route received when requesting walking route.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NVibeRoute"}],"url":"\/documentation\/nvdirectionkit\/nviberoute","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NVibeRoute"}],"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeRoute","kind":"symbol","title":"NVibeRoute"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit":{"role":"collection","url":"\/documentation\/nvdirectionkit","title":"NVDirectionKit","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit","abstract":[{"inlineContent":[{"type":"text","text":"Version:"}],"type":"strong"},{"type":"text","text":" 0.6.1"}],"type":"topic","kind":"symbol"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVDirection":{"kind":"symbol","title":"NVDirection","navigatorTitle":[{"text":"NVDirection","kind":"identifier"}],"type":"topic","url":"\/documentation\/nvdirectionkit\/nvdirection","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"NVDirection","kind":"identifier"}],"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection","abstract":[{"type":"text","text":"The object you use to mainly request route and multimodal route."}]},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVibeLeg":{"abstract":[{"type":"text","text":"The walking leg inside walking route."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"NVibeLeg","kind":"identifier"}],"url":"\/documentation\/nvdirectionkit\/nvibeleg","role":"symbol","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeLeg","kind":"symbol","title":"NVibeLeg","navigatorTitle":[{"kind":"identifier","text":"NVibeLeg"}],"type":"topic"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVDirection/getNavigationRoute(from:to:sideStreet:language:withObstacle:forbiddenObstacles:withInformationPoint:withAlternativePolyline:completion:)":{"kind":"symbol","title":"getNavigationRoute(from:to:sideStreet:language:withObstacle:forbiddenObstacles:withInformationPoint:withAlternativePolyline:completion:)","type":"topic","url":"\/documentation\/nvdirectionkit\/nvdirection\/getnavigationroute(from:to:sidestreet:language:withobstacle:forbiddenobstacles:withinformationpoint:withalternativepolyline:completion:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getNavigationRoute"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"NVibeLocation","kind":"typeIdentifier","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation","text":"NVibeLocation","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"sideStreet","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SideStreet","kind":"typeIdentifier","preciseIdentifier":"s:14NVDirectionKit10SideStreetO"},{"kind":"text","text":"?, "},{"text":"language","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"withObstacle","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forbiddenObstacles"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"], "},{"text":"withInformationPoint","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"withAlternativePolyline","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"completion","kind":"externalParam"},{"text":": ((route","kind":"text"},{"text":": ","kind":"text"},{"text":"NVibeRoute","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeRoute","kind":"typeIdentifier"},{"text":", startingDirection","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@T@CLLocationDirection","text":"CLLocationDirection","kind":"typeIdentifier"},{"text":", solutionFound","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")?, ","kind":"text"},{"preciseIdentifier":"s:14NVDirectionKit10RouteErrorO","text":"RouteError","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getNavigationRoute(from:to:sideStreet:language:withObstacle:forbiddenObstacles:withInformationPoint:withAlternativePolyline:completion:)","abstract":[{"type":"text","text":"Returns a walking route from completion handler."}]},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/GetStarted":{"role":"article","type":"topic","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetStarted","title":"Get started","abstract":[{"text":"Configure your app to be able to use the framework.","type":"text"}],"url":"\/documentation\/nvdirectionkit\/getstarted","kind":"article"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVibeStep":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NVibeStep","kind":"identifier"}],"role":"symbol","title":"NVibeStep","navigatorTitle":[{"kind":"identifier","text":"NVibeStep"}],"type":"topic","url":"\/documentation\/nvdirectionkit\/nvibestep","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeStep","abstract":[{"text":"The walking step inside walking leg.","type":"text"}],"kind":"symbol"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVDirection/getStartingDirection(from:to:completion:)":{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getStartingDirection(from:to:completion:)","abstract":[{"type":"text","text":"Returns the starting direction of a walking route from completion handler."}],"type":"topic","role":"symbol","url":"\/documentation\/nvdirectionkit\/nvdirection\/getstartingdirection(from:to:completion:)","title":"getStartingDirection(from:to:completion:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getStartingDirection","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation","text":"NVibeLocation","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NVibeLocation","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"preciseIdentifier":"c:@T@CLLocationDirection","text":"CLLocationDirection","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"RouteError","preciseIdentifier":"s:14NVDirectionKit10RouteErrorO","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVDirection/getNavigationRouteWithoutCrossing(from:to:option:)":{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getNavigationRouteWithoutCrossing(from:to:option:)","abstract":[{"type":"text","text":"Returns a walking route without crossing asynchronously using "},{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeRouteOption","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/nvdirectionkit\/nvdirection\/getnavigationroutewithoutcrossing(from:to:option:)","title":"getNavigationRouteWithoutCrossing(from:to:option:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getNavigationRouteWithoutCrossing","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NVibeLocation","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation","kind":"typeIdentifier","text":"NVibeLocation"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"option"},{"text":": ","kind":"text"},{"text":"NVibeRouteOption","kind":"typeIdentifier","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeRouteOption"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> (route","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeRoute","text":"NVibeRoute"},{"kind":"text","text":", startingDirection"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@T@CLLocationDirection","kind":"typeIdentifier","text":"CLLocationDirection"},{"kind":"text","text":")"}]},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/GetMultimodalRoute":{"kind":"article","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetMultimodalRoute","title":"Getting multimodal route","abstract":[{"text":"Retrieve a multimodal route including transit between two locations.","type":"text"}],"type":"topic","role":"article","url":"\/documentation\/nvdirectionkit\/getmultimodalroute"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/Link":{"navigatorTitle":[{"text":"Link","kind":"identifier"}],"title":"Link","url":"\/documentation\/nvdirectionkit\/link","type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The link along an alternative walking route."}],"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/Link","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Link"}]},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVDirection/getNavigationRoute(from:to:sideStreet:option:)":{"kind":"symbol","title":"getNavigationRoute(from:to:sideStreet:option:)","type":"topic","url":"\/documentation\/nvdirectionkit\/nvdirection\/getnavigationroute(from:to:sidestreet:option:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getNavigationRoute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation","text":"NVibeLocation","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation","text":"NVibeLocation"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"sideStreet"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14NVDirectionKit10SideStreetO","text":"SideStreet","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"option","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NVibeRouteOption","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeRouteOption","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> (route","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NVibeRoute","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeRoute"},{"kind":"text","text":", startingDirection"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@T@CLLocationDirection","text":"CLLocationDirection","kind":"typeIdentifier"},{"text":", solutionFound","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getNavigationRoute(from:to:sideStreet:option:)","abstract":[{"type":"text","text":"Returns a walking route with crossing asynchronously using "},{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeRouteOption","isActive":true,"type":"reference"},{"type":"text","text":"."}]}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"value":null,"op":"add","path":"\/topicSections"},{"value":[{"anchor":"Essentials","title":"Essentials","identifiers":["doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetStarted","doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetMultimodalRoute","doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection"],"generated":true}],"op":"replace","path":"\/seeAlsoSections"},{"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeRouteOption\/title","op":"replace","value":"NVibeRouteOption"},{"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeRouteOption\/fragments","value":[{"text":"NVibeRouteOption","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeRouteOption\/navigatorTitle","value":[{"kind":"identifier","text":"NVibeRouteOption"}]},{"value":"NVibeLocation","op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeLocation\/title"},{"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeLocation\/fragments","value":[{"kind":"identifier","text":"NVibeLocation"}],"op":"replace"},{"value":[{"text":"NVibeLocation","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeLocation\/navigatorTitle","op":"replace"},{"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeRoute\/title","op":"replace","value":"NVibeRoute"},{"value":[{"kind":"identifier","text":"NVibeRoute"}],"op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeRoute\/fragments"},{"value":[{"text":"NVibeRoute","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeRoute\/navigatorTitle","op":"replace"},{"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVDirection\/title","op":"replace","value":"NVDirection"},{"value":[{"text":"NVDirection","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVDirection\/fragments"},{"value":[{"kind":"identifier","text":"NVDirection"}],"op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVDirection\/navigatorTitle"},{"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeLeg\/title","value":"NVibeLeg","op":"replace"},{"op":"replace","value":[{"kind":"identifier","text":"NVibeLeg"}],"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeLeg\/fragments"},{"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeLeg\/navigatorTitle","value":[{"text":"NVibeLeg","kind":"identifier"}],"op":"replace"},{"value":"NVibeStep","op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeStep\/title"},{"op":"replace","value":[{"text":"NVibeStep","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeStep\/fragments"},{"value":[{"kind":"identifier","text":"NVibeStep"}],"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeStep\/navigatorTitle","op":"replace"},{"value":"Link","op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1Link\/title"},{"op":"replace","value":[{"kind":"identifier","text":"Link"}],"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1Link\/fragments"},{"op":"replace","value":[{"text":"Link","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1Link\/navigatorTitle"}]}]}