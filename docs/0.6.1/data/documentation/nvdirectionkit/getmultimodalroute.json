{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"text":"Retrieve a multimodal route including transit between two locations.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetStarted","doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetRoute","doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection"],"anchor":"Essentials","title":"Essentials","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nvdirectionkit\/getmultimodalroute"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/nvdirectionkit\/getmultimodalroute"]}],"metadata":{"roleHeading":"Article","title":"Getting multimodal route","role":"article","modules":[{"name":"NVDirectionKit"}]},"kind":"article","identifier":{"url":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetMultimodalRoute","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit"]]},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"You can calculate multimodal route between two locations and set different parameter based on your need.","type":"text"}]},{"inlineContent":[{"text":"A ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeMultimodalRoute","isActive":true},{"text":" contains one or more ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeMultimodalStep","type":"reference"},{"text":". Each ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeMultimodalStep","isActive":true},{"text":" refers to a walking step or transit step.","type":"text"}],"type":"paragraph"},{"name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The walking route for walking step are not directly available. It contains only the start location and the end location of the walking step. To get the route with instruction, see "},{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetRoute","isActive":true,"type":"reference"},{"type":"text","text":"."}]}],"style":"important"},{"type":"heading","anchor":"Calculate-a-multimodal-route","text":"Calculate a multimodal route","level":2},{"type":"paragraph","inlineContent":[{"text":"To calculate multimodal route, you need to use the method ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getMultimodalRoute(from:to:onlyFullWalking:withFullWalkingAlternative:avoid:completion:)","isActive":true},{"type":"text","text":" with a start and end "},{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeLocation","isActive":true,"type":"reference"},{"type":"text","text":". The first multimodal route will always be a full walking route."}]},{"type":"codeListing","code":["import NVDirectionKit","import CoreLocation","","class MyClass: UIViewController {","","    override func viewDidLoad() {","        let origin = CLLocationCoordinate2D(latitude: 48.85869580049223, longitude: 2.373062553499055)","        let destination = CLLocationCoordinate2D(latitude: 48.861554779024814, longitude: 2.3608910965668053)","        ","        NVDirection.shared.getMultimodalRoute(from: NVibeLocation(address: \"Pépinière 27\", position: origin), to: NVibeLocation(address: \"13 Rue Charlot\", position: destination)) { (multimodalRoutes, error) in","            guard result != nil, error == nil else {","                \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","                return","            }","            \/\/You receive the list of multimodal route here.","            for multimodalRoute in multimodalRoutes {","                for multimodalStep in multimodalRoute.steps {","                    if multimodalStep.isWalkingStep() {","                        \/\/You can calculate a walking route for the walking step here.","                        NVDirection.shared.getNavigationRoute(from: multimodalStep.startAddress, to: multimodalStep.endAddress) { (result, error) in","                            guard result != nil, error == nil else {","                                \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","                                return","                            }","                            \/\/You receive the calculated route here and additional data.","                            result.route \/\/NVibeRoute","                            result.startingDirection \/\/CLLocationDirection","                            result.solutionFound \/\/Bool","                        }","                    } else if multimodalStep.isTransitStep(), let information = multimodalStep.information.getTransitInformation() {","                        \/\/You have all the data needed about the transit to take.","                        print(\"Take the \\(information.type) \\(information.line) direction \\(information.headsign) from \\(information.departureStop.address) to \\(information.arrivalStop.address)\")","                    }","                }","            }","        }","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To get only full walking route, set "},{"type":"codeVoice","code":"onlyFullWalking"},{"type":"text","text":" to true."}]},{"syntax":"swift","type":"codeListing","code":["import NVDirectionKit","import CoreLocation","","class MyClass: UIViewController {","","    override func viewDidLoad() {","        let origin = CLLocationCoordinate2D(latitude: 48.85869580049223, longitude: 2.373062553499055)","        let destination = CLLocationCoordinate2D(latitude: 48.861554779024814, longitude: 2.3608910965668053)","        ","        NVDirection.shared.getMultimodalRoute(from: NVibeLocation(address: \"Pépinière 27\", position: origin), to: NVibeLocation(address: \"13 Rue Charlot\", position: destination), onlyFullWalking: true) { (multimodalRoutes, error) in","            guard result != nil, error == nil else {","                \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","                return","            }","            \/\/You receive the list of multimodal route here containing only one full walking route.","            guard let route = multimodalRoutes.first?.steps.first else {","                \/\/Normally, you will always get at least one full walking route, no matter what parameter you choose.","                return","            }","                        ","            \/\/You can calculate a walking route for the walking step here.","            NVDirection.shared.getNavigationRoute(from: route.startAddress, to: route.endAddress) { (result, error) in","                guard result != nil, error == nil else {","                    \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","                    return","                }","                \/\/You receive the calculated route here and additional data.","                result.route \/\/NVibeRoute","                result.startingDirection \/\/CLLocationDirection","                result.solutionFound \/\/Bool","            }","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"To get alternative full walking route, set ","type":"text"},{"type":"codeVoice","code":"withFullWalkingAlternative"},{"text":" to true. Alternative full walking route are differentiated by ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeWalkingInformation\/links"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeWalkingInformation\/via","type":"reference","isActive":true},{"type":"text","text":" and can be requested with "},{"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getNavigationRoute(from:to:sideStreet:option:)","isActive":true},{"text":" or ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getNavigationRouteWithoutCrossing(from:to:option:)"},{"text":" by including links in option. For more information, see ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetRoute"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"You will receive maximum 3 alternatives routes including the base one."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import NVDirectionKit","import CoreLocation","","class MyClass: UIViewController {","","    override func viewDidLoad() {","        let origin = CLLocationCoordinate2D(latitude: 48.85869580049223, longitude: 2.373062553499055)","        let destination = CLLocationCoordinate2D(latitude: 48.861554779024814, longitude: 2.3608910965668053)","        ","        NVDirection.shared.getMultimodalRoute(from: NVibeLocation(address: \"Pépinière 27\", position: origin), to: NVibeLocation(address: \"13 Rue Charlot\", position: destination), withFullWalkingAlternative: true) { (multimodalRoutes, error) in","            guard result != nil, error == nil else {","                \/\/You will receive an error if the route calculation fails. More detail about the error in the error object.","                return","            }","            \/\/You receive the list of multimodal route here.","            for multimodalRoute in multimodalRoutes {","                for multimodalStep in multimodalRoute.steps {","                    if multimodalStep.isWalkingStep() {","                        \/\/You can calculate a walking route for the walking step here.","                    } else if multimodalStep.isTransitStep(), let information = multimodalStep.information.getTransitInformation() {","                        \/\/You have all the data needed about the transit to take.","                        print(\"Take the \\(information.type) \\(information.line) direction \\(information.headsign) from \\(information.departureStop.address) to \\(information.arrivalStop.address)\")","                    }","                }","            }","        }","    }","}"]},{"inlineContent":[{"text":"You can combine ","type":"text"},{"type":"codeVoice","code":"onlyFullWalking"},{"text":" and ","type":"text"},{"code":"withFullWalkingAlternative","type":"codeVoice"},{"type":"text","text":" as you wish."}],"type":"paragraph"}]}],"references":{"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/GetRoute":{"kind":"article","url":"\/documentation\/nvdirectionkit\/getroute","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetRoute","role":"article","abstract":[{"text":"Retrieve a walking route between two locations.","type":"text"}],"title":"Getting walking route","type":"topic"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVibeWalkingInformation/via":{"abstract":[{"text":"The street name used by alternative walking multimodal step.","type":"text"}],"url":"\/documentation\/nvdirectionkit\/nvibewalkinginformation\/via","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"via"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?","kind":"text"}],"title":"via","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeWalkingInformation\/via","role":"symbol","kind":"symbol","type":"topic"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVDirection":{"kind":"symbol","title":"NVDirection","navigatorTitle":[{"text":"NVDirection","kind":"identifier"}],"type":"topic","url":"\/documentation\/nvdirectionkit\/nvdirection","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"NVDirection","kind":"identifier"}],"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection","abstract":[{"type":"text","text":"The object you use to mainly request route and multimodal route."}]},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVibeWalkingInformation/links":{"kind":"symbol","url":"\/documentation\/nvdirectionkit\/nvibewalkinginformation\/links","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"links","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)Link","text":"Link","kind":"typeIdentifier"},{"kind":"text","text":"]?"}],"title":"links","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeWalkingInformation\/links","type":"topic","abstract":[{"type":"text","text":"The links used by alternative walking multimodal step."}],"role":"symbol"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVibeMultimodalRoute":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NVibeMultimodalRoute"}],"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeMultimodalRoute","kind":"symbol","navigatorTitle":[{"text":"NVibeMultimodalRoute","kind":"identifier"}],"title":"NVibeMultimodalRoute","url":"\/documentation\/nvdirectionkit\/nvibemultimodalroute","abstract":[{"type":"text","text":"The multimodal route received when requesting multimodal route."}],"type":"topic","role":"symbol"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVDirection/getMultimodalRoute(from:to:onlyFullWalking:withFullWalkingAlternative:avoid:completion:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getMultimodalRoute"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NVibeLocation","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation","text":"NVibeLocation"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onlyFullWalking"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"withFullWalkingAlternative"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"avoid"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeTransitInformation","text":"NVibeTransitInformation"},{"text":".","kind":"text"},{"preciseIdentifier":"s:14NVDirectionKit23NVibeTransitInformationC4ModeO","text":"Mode","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"completion"},{"text":": ([","kind":"text"},{"kind":"typeIdentifier","text":"NVibeMultimodalRoute","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeMultimodalRoute"},{"text":"]?, ","kind":"text"},{"preciseIdentifier":"s:14NVDirectionKit15MultimodalErrorO","text":"MultimodalError","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getMultimodalRoute(from:to:onlyFullWalking:withFullWalkingAlternative:avoid:completion:)","kind":"symbol","title":"getMultimodalRoute(from:to:onlyFullWalking:withFullWalkingAlternative:avoid:completion:)","url":"\/documentation\/nvdirectionkit\/nvdirection\/getmultimodalroute(from:to:onlyfullwalking:withfullwalkingalternative:avoid:completion:)","abstract":[{"type":"text","text":"Returns multimodal routes from completion handler."}],"type":"topic","role":"symbol"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVibeRouteOption":{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeRouteOption","abstract":[{"type":"text","text":"The option for walking route."}],"type":"topic","role":"symbol","url":"\/documentation\/nvdirectionkit\/nviberouteoption","navigatorTitle":[{"text":"NVibeRouteOption","kind":"identifier"}],"title":"NVibeRouteOption","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NVibeRouteOption"}]},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVDirection/getNavigationRoute(from:to:sideStreet:option:)":{"kind":"symbol","title":"getNavigationRoute(from:to:sideStreet:option:)","type":"topic","url":"\/documentation\/nvdirectionkit\/nvdirection\/getnavigationroute(from:to:sidestreet:option:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getNavigationRoute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation","text":"NVibeLocation","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation","text":"NVibeLocation"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"sideStreet"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14NVDirectionKit10SideStreetO","text":"SideStreet","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"option","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NVibeRouteOption","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeRouteOption","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> (route","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NVibeRoute","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeRoute"},{"kind":"text","text":", startingDirection"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@T@CLLocationDirection","text":"CLLocationDirection","kind":"typeIdentifier"},{"text":", solutionFound","kind":"text"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getNavigationRoute(from:to:sideStreet:option:)","abstract":[{"type":"text","text":"Returns a walking route with crossing asynchronously using "},{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeRouteOption","isActive":true,"type":"reference"},{"type":"text","text":"."}]},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/GetStarted":{"role":"article","type":"topic","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetStarted","title":"Get started","abstract":[{"text":"Configure your app to be able to use the framework.","type":"text"}],"url":"\/documentation\/nvdirectionkit\/getstarted","kind":"article"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVDirection/getNavigationRouteWithoutCrossing(from:to:option:)":{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection\/getNavigationRouteWithoutCrossing(from:to:option:)","abstract":[{"type":"text","text":"Returns a walking route without crossing asynchronously using "},{"identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeRouteOption","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/nvdirectionkit\/nvdirection\/getnavigationroutewithoutcrossing(from:to:option:)","title":"getNavigationRouteWithoutCrossing(from:to:option:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getNavigationRouteWithoutCrossing","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NVibeLocation","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeLocation","kind":"typeIdentifier","text":"NVibeLocation"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"option"},{"text":": ","kind":"text"},{"text":"NVibeRouteOption","kind":"typeIdentifier","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeRouteOption"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> (route","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NVDirectionKit@objc(cs)NVibeRoute","text":"NVibeRoute"},{"kind":"text","text":", startingDirection"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@T@CLLocationDirection","kind":"typeIdentifier","text":"CLLocationDirection"},{"kind":"text","text":")"}]},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVibeMultimodalStep":{"abstract":[{"text":"The multimodal step inside multimodal route.","type":"text"}],"url":"\/documentation\/nvdirectionkit\/nvibemultimodalstep","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"NVibeMultimodalStep","kind":"identifier"}],"navigatorTitle":[{"text":"NVibeMultimodalStep","kind":"identifier"}],"title":"NVibeMultimodalStep","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeMultimodalStep","role":"symbol","kind":"symbol","type":"topic"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit/NVibeLocation":{"abstract":[{"text":"The address and coordinates of a location.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVibeLocation","url":"\/documentation\/nvdirectionkit\/nvibelocation","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"NVibeLocation","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"NVibeLocation"}],"type":"topic","kind":"symbol","title":"NVibeLocation"},"doc://com.nvibe.NVDirectionKit/documentation/NVDirectionKit":{"role":"collection","url":"\/documentation\/nvdirectionkit","title":"NVDirectionKit","identifier":"doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit","abstract":[{"inlineContent":[{"type":"text","text":"Version:"}],"type":"strong"},{"type":"text","text":" 0.6.1"}],"type":"topic","kind":"symbol"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"add","value":null,"path":"\/topicSections"},{"op":"replace","path":"\/seeAlsoSections","value":[{"anchor":"Essentials","identifiers":["doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetStarted","doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/GetRoute","doc:\/\/com.nvibe.NVDirectionKit\/documentation\/NVDirectionKit\/NVDirection"],"title":"Essentials","generated":true}]},{"value":"NVDirection","op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVDirection\/title"},{"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVDirection\/fragments","value":[{"kind":"identifier","text":"NVDirection"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVDirection\/navigatorTitle","op":"replace","value":[{"text":"NVDirection","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeMultimodalRoute\/title","value":"NVibeMultimodalRoute","op":"replace"},{"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeMultimodalRoute\/fragments","value":[{"text":"NVibeMultimodalRoute","kind":"identifier"}],"op":"replace"},{"value":[{"text":"NVibeMultimodalRoute","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeMultimodalRoute\/navigatorTitle","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeRouteOption\/title","value":"NVibeRouteOption"},{"op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeRouteOption\/fragments","value":[{"text":"NVibeRouteOption","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeRouteOption\/navigatorTitle","value":[{"text":"NVibeRouteOption","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeMultimodalStep\/title","value":"NVibeMultimodalStep"},{"value":[{"kind":"identifier","text":"NVibeMultimodalStep"}],"op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeMultimodalStep\/fragments"},{"value":[{"kind":"identifier","text":"NVibeMultimodalStep"}],"op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeMultimodalStep\/navigatorTitle"},{"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeLocation\/title","op":"replace","value":"NVibeLocation"},{"op":"replace","path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeLocation\/fragments","value":[{"text":"NVibeLocation","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nvibe.NVDirectionKit~1documentation~1NVDirectionKit~1NVibeLocation\/navigatorTitle","value":[{"kind":"identifier","text":"NVibeLocation"}],"op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}